<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kun.app.operater.data.OperaterMapper">
	<resultMap id="OperaterResultMap" type="com.kun.app.operater.model.Operater">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Apr 24 
			22:29:03 CST 2014. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<!-- ======================================================== -->
	<!-- hibernate-oracle分页的处理方式 -->
	<!-- select * from ( select row_.*, rownum rownum_ from ( select * from 
		table ) row_ where rownum <= ? ) where rownum_ > ? -->

	<!-- 增加 -->
	<insert id="save" parameterType="com.kun.app.operater.model.Operater"
		useGeneratedKeys="true" keyProperty="object.id">
		<if test="object.name != null and object.name != ''">
			insert into operater (
			name, password,status
			)
			values (
			#{object.name}, #{object.password},
			#{object.status})
		</if>
	</insert>
	<!-- 修改 -->
	<update id="update" parameterType="com.kun.app.operater.model.Operater">
		<if test="object.id != null and object.name != null and object.name != ''">
			update operater set name = #{object.name}, password =
			#{object.password}, status=#{object.status}
			where id=#{object.id}
		</if>
	</update>
	<!-- 删除 -->
	<delete id="delete" parameterType="com.kun.app.operater.model.Operater">
		<if test="object.id != null">
			delete from operater where id=#{object.id}
		</if>
	</delete>
	<delete id="deleteAll">
		delete from operater
	</delete>
	<delete id="deleteByKey" parameterType="java.io.Serializable">
		<if test="key != null">
			delete from operater where id=#{key}
		</if>
	</delete>
	<!-- 查询 -->
	<select id="getByKey" resultMap="OperaterResultMap"
		parameterType="java.io.Serializable">
		<if test="key != null">
			select
			<include refid="Operater_Columns" />
			from operater where id = #{key}
		</if>
	</select>
	<select id="findByExample" resultMap="OperaterResultMap"
		parameterType="com.kun.app.operater.model.Operater">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="findOnePageByExample" resultMap="OperaterResultMap"
		parameterType="map">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="getCountByExample" resultType="int"
		parameterType="com.kun.app.operater.model.Operater">
		select count(*) from operater
		<include refid="Common_Where_Fragment" />
	</select>
	<select id="findOneByExample" resultMap="OperaterResultMap"
		parameterType="com.kun.app.operater.model.Operater">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Common_Where_Fragment" />
		limit 0,1
	</select>
	<select id="loadAll" resultMap="OperaterResultMap"
		parameterType="com.kun.app.operater.model.Operater">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
	</select>
	<select id="loadOnePage" resultMap="OperaterResultMap"
		parameterType="com.kun.common.bean.Pagination">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
	</select>
	<select id="getCount" resultType="int">
		select count(*) from operater
	</select>
	<select id="search" resultMap="OperaterResultMap" parameterType="map">
		<!-- 当Operater对象为null需要测试 -->
		select
		<include refid="Operater_Columns" />
		from operater
		<include refid="Search_Where_Fragment" />
	</select>
	<select id="getCountForSearch" resultType="int"
		parameterType="com.kun.app.operater.model.Operater">
		select count(*) from operater
		<include refid="Search_Where_Fragment" />
	</select>

	<sql id="Operater_Columns">
		id, name, password,status
	</sql>

	<sql id="Common_Where_Fragment">
		<trim prefix="where" suffixOverrides="and">
			<include refid="Common_Fragment" />
			<if test="object.name != null and object.name != ''">
				name = #{object.name} and
			</if>
		</trim>
	</sql>

	<sql id="Search_Where_Fragment">
		<trim prefix="where" suffixOverrides="and">
			<include refid="Common_Fragment" />
			<if test="object.name != null and object.name != ''">
				<bind name="objName" value="'%'+object.getName()+'%'" />
				name like #{objName} and
			</if>
		</trim>
	</sql>
	<sql id="Common_Fragment">
		<if test="object.status != null">
			status = #{object.status} and
		</if>
	</sql>
	<!-- ======================================================== -->
</mapper>
